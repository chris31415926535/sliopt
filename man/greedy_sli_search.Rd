% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hello.R
\name{greedy_sli_search}
\alias{greedy_sli_search}
\title{Create optimized single-link indicators using a greedy search algorithm}
\usage{
greedy_sli_search(
  from_shp,
  from_idcol,
  from_valuecol,
  to_shp,
  to_idcol,
  to_valuecol,
  optimize_for = c("mape", "mae", "mse"),
  tolerance = 0.05,
  iterations = 3,
  input_sli = NA,
  shuffle_inputs = TRUE,
  verbose = FALSE
)
}
\arguments{
\item{from_shp}{A tibble of origins that is also a simplefeature object, where each row represents one region.}

\item{from_idcol}{Character. The name of the `from_shp` column containing a unique identifier.}

\item{from_valuecol}{Character. The name of the `from_shp` column containing origin-region value of interest.}

\item{to_shp}{A tibble of destinations that is also a simplefeature object, where each row represents one region.}

\item{to_idcol}{Character. The name of the `to_shp` column containing a unique identifier.}

\item{to_valuecol}{Character. The name of the `to_shp` column containing the destination-region value of interest. This is the "gold standard" that is required to optimize the linkage.}

\item{optimize_for}{Character. Which measure are we optimizing? Accepts "mse", "mae", or "mape".}

\item{tolerance}{Numeric. What is the minimum fractional overlap allowed? Defaults to 0.05 (i.e. 5\%).}

\item{iterations}{Integer. How many times should we repeat the entire process? Default is 3.}

\item{input_sli}{Optional. A tibble containing an SLI from the origin to destination regions.}

\item{shuffle_inputs}{Boolean. Should we shuffle the order in which we consider regions? Default TRUE.}

\item{verbose}{Boolean. For debugging, gives too much info. Default FALSE.}
}
\value{
An SLI
}
\description{
Sometimes you have data measured over one set of geographical regions (e.g.
census tracts) and you want to estimate how that data would look in an
overlapping but different set of geographical regions (e.g. school boards).
If the one set of geometries fits inside the other perfectly, then aggregating
your data is straightforward. But if the two sets of geometries overlap
messily, there is no straightforward "correct" way to link origin regions to
destination regions.
}
\details{
This function implements an algorithm to create a single-link indicator that
matches each "from" region to one and only one "to" region. It requires a
a source of truth"--no small requirement--that is, a set of known-to-be-
accurate measurements of the same quantity over both sets of regions. It then
uses a greedy algorithm to attempt to link origin regions to destination regions
so as to minimize some score (mean average error, mean average percentage
error, or mean squared error).

Origin and destination regions are only candidates for linking if they overlap
by more than an optional threshold value. This is to prevent spurious linkages
due to small data discrepancies (e.g. if two regions share a real-world
boundary like a road, but their geospatial data representations overlap in a
tiny sliver because of small differences in geocoding).

The algorithm can start with an arbitrary input SLI, or else creates one
by assigning each origin to the destination it overlaps the most.

For each origin region, the algorithm considers each possible destination region,
assigns it to that region, computes the new overall score, and accepts that
assignment if it results in a lower score.

Algorithm progress is returned as an attribute called "optimization_progress".
}
